{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _initializerDefineProperty from \"@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _applyDecoratedDescriptor from \"@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { observable, action } from \"mobx\";\nexport var UserStore = (_class = (_temp = /*#__PURE__*/function () {\n  function UserStore() {\n    _classCallCheck(this, UserStore);\n\n    _initializerDefineProperty(this, \"title\", _descriptor, this);\n  }\n\n  _createClass(UserStore, [{\n    key: \"hydrate\",\n    value: function hydrate(serializedStore) {\n      this.title = serializedStore === null || serializedStore === void 0 ? void 0 : serializedStore.title;\n    }\n  }, {\n    key: \"changeTitle\",\n    value: function changeTitle(newTitle) {\n      this.title = newTitle;\n    }\n  }]);\n\n  return UserStore;\n}(), _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"title\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: null\n}), _applyDecoratedDescriptor(_class.prototype, \"changeTitle\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"changeTitle\"), _class.prototype)), _class);\nexport function fetchInitialStoreState() {\n  return _fetchInitialStoreState.apply(this, arguments);\n}\n\nfunction _fetchInitialStoreState() {\n  _fetchInitialStoreState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", {});\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchInitialStoreState.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/niawjunior/Desktop/kai-huay/src/stores/user.ts"],"names":["observable","action","UserStore","serializedStore","title","newTitle","fetchInitialStoreState"],"mappings":";;;;;;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;AAMA,WAAaC,SAAb;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,4BAGUC,eAHV,EAG4C;AACxC,WAAKC,KAAL,GAAaD,eAAb,aAAaA,eAAb,uBAAaA,eAAe,CAAEC,KAA9B;AACD;AALH;AAAA;AAAA,gCAOsBC,QAPtB,EAOwC;AACpC,WAAKD,KAAL,GAAaC,QAAb;AACD;AATH;;AAAA;AAAA,kFACGL,UADH;AAAA;AAAA;AAAA;AAAA;AAAA,gEAOGC,MAPH;AAYA,gBAAsBK,sBAAtB;AAAA;AAAA;;;qFAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6CACE,EADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { observable, action } from \"mobx\";\n\ntype SerializedStore = {\n  title: string;\n};\n\nexport class UserStore {\n  @observable title!: string;\n\n  hydrate(serializedStore: SerializedStore) {\n    this.title = serializedStore?.title;\n  }\n\n  @action changeTitle(newTitle: string) {\n    this.title = newTitle;\n  }\n}\n\nexport async function fetchInitialStoreState() {\n  return {};\n}"]},"metadata":{},"sourceType":"module"}